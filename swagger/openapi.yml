openapi: 3.0.0
info:
  description: This is a Skillme API Document.
  version: 1.0.0
  title: Skillme API Document
  contact:
    email: hirokikondo86@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: 'http://localhost:8080/api/v1'
paths:
  '/members/{memberId}/skillScores':
    parameters:
      - schema:
          type: string
        name: memberId
        in: path
        required: true
        description: memberId
    get:
      summary: Get a member skill score.
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillScore'
              examples:
                example:
                  value:
                    design: 5
                    implementation: 3.5
                    communication: 2
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      operationId: getMemberSkillScoreById
      description: Get a member skill score.
  '/members/{memberId}/messages':
    parameters:
      - schema:
          type: string
        name: memberId
        in: path
        required: true
        description: memberId
    get:
      summary: Get a member messages.
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  top_communication_message:
                    $ref: '#/components/schemas/Message'
                  top_implementation_message:
                    $ref: '#/components/schemas/Message'
                  top_design_message:
                    $ref: '#/components/schemas/Message'
                required:
                  - top_communication_message
                  - top_implementation_message
                  - top_design_message
              examples:
                example:
                  value:
                    top_communication_message:
                      url: string
                      text: string
                      stamps:
                        good_count: 0
                        bad_count: 0
                        laugh_count: 0
                        hooray_count: 0
                        confused_count: 0
                        heart_count: 0
                        rocket_count: 0
                        eyes_count: 0
                      created_at: '2019-08-24T14:15:22Z'
                      updated_at: '2019-08-24T14:15:22Z'
                    top_implementation_message:
                      url: string
                      text: string
                      stamps:
                        good_count: 0
                        bad_count: 0
                        laugh_count: 0
                        hooray_count: 0
                        confused_count: 0
                        heart_count: 0
                        rocket_count: 0
                        eyes_count: 0
                      created_at: '2019-08-24T14:15:22Z'
                      updated_at: '2019-08-24T14:15:22Z'
                    top_design_message:
                      url: string
                      text: string
                      stamps:
                        good_count: 0
                        bad_count: 0
                        laugh_count: 0
                        hooray_count: 0
                        confused_count: 0
                        heart_count: 0
                        rocket_count: 0
                        eyes_count: 0
                      created_at: '2019-08-24T14:15:22Z'
                      updated_at: '2019-08-24T14:15:22Z'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      operationId: getMemberMessagesById
      description: Get a member messages.
  '/members/{memberId}':
    parameters:
      - schema:
          type: string
        name: memberId
        in: path
        required: true
        description: memberId
    get:
      summary: Get a member.
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                description: ''
                minItems: 1
                uniqueItems: true
                x-examples:
                  example-1:
                    - id: 1
                      github_name: hirokikondo86
                      name: 近藤 大暉
                      avatar_url: 'http://example.com'
                      url: 'http://github.com/hirokikondo86'
                      join_date: 2021.4 ~ now
                      chips: []
                items:
                  $ref: '#/components/schemas/Member'
              examples:
                example:
                  value:
                    - id: 1
                      github_name: hirokikondo86
                      name: 近藤 大暉
                      avatar_url: 'http://example.com'
                      url: 'http://github.com/hirokikondo86'
                      join_date: 2021.4 ~ now
                      chips: []
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      operationId: getMemberById
      description: Get a member.
  /members:
    get:
      summary: Get members.
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Member'
              examples:
                example:
                  value:
                    - id: 1
                      github_name: hirokikondo86
                      name: 近藤 大暉
                      avatar_url: 'http://example.com'
                      url: 'http://github.com/hirokikondo86'
                      join_date: 2021.4 ~ now
                      chips: []
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      operationId: getMembers
      description: Get members.
components:
  schemas:
    SkillScore:
      title: SkillScore
      description: Member skill score
      type: object
      required:
        - design
        - implementation
        - communication
      properties:
        design:
          type: number
          format: float
        implementation:
          type: number
          format: float
        communication:
          type: number
          format: float
      x-examples:
        example:
          design: 5
          implementation: 3.5
          communication: -2
    Message:
      title: Message
      type: object
      description: Message sent by member
      x-examples:
        example:
          url: string
          text: string
          stamps:
            good_count: 0
            bad_count: 0
            laugh_count: 0
            hooray_count: 0
            confused_count: 0
            heart_count: 0
            rocket_count: 0
            eyes_count: 0
          created_at: '2019-08-24T14:15:22Z'
          updated_at: '2019-08-24T14:15:22Z'
      properties:
        url:
          type: string
        text:
          type: string
          nullable: true
        stamps:
          type: object
          required:
            - good_count
            - bad_count
            - laugh_count
            - hooray_count
            - confused_count
            - heart_count
            - rocket_count
            - eyes_count
          properties:
            good_count:
              type: number
            bad_count:
              type: number
            laugh_count:
              type: number
            hooray_count:
              type: number
            confused_count:
              type: number
            heart_count:
              type: number
            rocket_count:
              type: number
            eyes_count:
              type: number
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - url
        - text
        - stamps
        - created_at
        - updated_at
    Member:
      description: ''
      type: object
      x-examples:
        example:
          id: 1
          github_name: hirokikondo86
          name: 近藤 大暉
          avatar_url: 'https://github.com/hirokikondo86/avatar'
          url: 'https://github.com/hirokikondo86'
          join_date: 2021.4 ~ now
          chips:
            - value: string
              color: blue
      properties:
        id:
          type: number
        github_name:
          type: string
          minLength: 1
        name:
          type: string
          minLength: 1
        avatar_url:
          type: string
          minLength: 1
        url:
          type: string
          minLength: 1
        join_date:
          type: string
          minLength: 1
        chips:
          type: array
          uniqueItems: true
          minItems: 0
          items:
            $ref: '#/components/schemas/Chip'
      required:
        - id
        - github_name
        - name
        - avatar_url
        - url
        - join_date
        - chips
    Chip:
      title: Chip
      type: object
      properties:
        value:
          type: string
        color:
          type: string
          enum:
            - blue
            - lightBlue
            - green
            - yellowGreen
            - yellow
            - orange
            - red
      required:
        - value
        - color
      x-examples:
        example:
          value: フルサイクルエンジニア
          color: blue
      description: Chip
