openapi: "3.0.0"
info:
  description: This is a Skillme API Document.
  version: 1.0.0
  title: Skillme API Document
  contact:
    email: hirokikondo86@gmail.com
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
servers:
  - url: "http://localhost:8080"
paths:
  "/members/{memberId}/stamps":
    get:
      summary: Get a member got stamps
      tags: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Stamp"
              examples:
                example:
                  value:
                    design: 49.57
                    implementation: 30.28
                    communication: 20.15
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      operationId: getMemberStampsById
      description: Get a member got stamps.
      x-internal: false
      parameters: []
    parameters:
      - schema:
          type: integer
        name: memberId
        in: path
        description: memberId
        required: true
  "/members/{memberId}/skillScores":
    parameters:
      - schema:
          type: string
        name: memberId
        in: path
        required: true
        description: memberId
    get:
      summary: Get a member skill score.
      tags: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SkillScore"
              examples:
                example:
                  value:
                    design: 5
                    implementation: 3.5
                    communication: 2
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      operationId: getMemberSkillScoreById
      description: Get a member skill score.
  "/members/{memberId}/threads":
    parameters:
      - schema:
          type: string
        name: memberId
        in: path
        required: true
        description: memberId
    get:
      summary: Get a member threads.
      tags: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Thread"
              examples:
                example:
                  value:
                    - username: hirokikondo86
                      sendDate: "2019-08-24T14:15:22Z"
                      tag: design
                      description: string
                      stamps:
                        "+1": 0
                        "-1": 0
                        laugh: 0
                        hooray: 0
                        confused: 0
                        heart: 0
                        rocket: 0
                        eyes: 0
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      operationId: getMemberThreadsById
      description: Get a member threads.
  "/members/{memberId}":
    parameters:
      - schema:
          type: string
        name: memberId
        in: path
        required: true
        description: memberId
    get:
      summary: Get a member.
      tags: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Member"
              examples:
                example:
                  value:
                    login: hirokikondo86
                    id: 1
                    avatar_url: "http://example.com"
                    url: "http://github.com/hirokikondo86"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      operationId: getMemberById
      description: Get a member.
  /members:
    get:
      summary: Get members.
      tags: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Member"
              examples:
                example:
                  value:
                    - login: hirokikondo86
                      id: 1
                      avatar_url: "http://example.com"
                      url: "http://github.com/hirokikondo86"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      operationId: getMembers
      description: Get members.

components:
  schemas:
    Stamp:
      title: Stamp
      description: Statmp member got
      type: object
      required:
        - design
        - implementation
        - communication
      properties:
        design:
          type: number
          format: float
        implementation:
          type: number
          format: float
        communication:
          type: number
          format: float
      x-examples:
        example:
          design: 49.57
          implementation: 30.28
          communication: 20.15
    SkillScore:
      title: SkillScore
      description: Member skill score
      type: object
      required:
        - design
        - implementation
        - communication
      properties:
        design:
          type: number
          format: float
        implementation:
          type: number
          format: float
        communication:
          type: number
          format: float
      x-examples:
        example:
          design: 5
          implementation: 3.5
          communication: -2
    Thread:
      title: Thread
      type: object
      description: Thread sent by member
      required:
        - username
        - sendDate
        - tag
        - description
        - stamps
      properties:
        username:
          type: string
        sendDate:
          type: string
          format: date-time
        tag:
          $ref: "#/components/schemas/SkillTag"
        description:
          type: string
          nullable: true
        stamps:
          type: object
          required:
            - good
            - bad
            - laugh
            - hooray
            - confused
            - heart
            - rocket
            - eyes
          properties:
            # MEMO: GitHub APIに合わせて"+1","-1"にしたかったが、 generateした際に"_1"に変換されて
            # openapi.validator: validation errors が発生するのでgood, badに変更
            good:
              type: number
            bad:
              type: number
            laugh:
              type: number
            hooray:
              type: number
            confused:
              type: number
            heart:
              type: number
            rocket:
              type: number
            eyes:
              type: number
      x-examples:
        example:
          username: hirokikondo86
          sendDate: "2019-08-24T14:15:22Z"
          tag: communication
          description: string
          stamps:
            good: 0
            bad: 0
            laugh: 0
            hooray: 0
            confused: 0
            heart: 0
            rocket: 0
            eyes: 0
    SkillTag:
      title: SkillTag
      description: Skill tag
      type: string
      oneOf:
        - properties: {}
          enum:
            - design
            - implementation
            - communication
      x-examples:
        example: design
    Member:
      title: Member
      type: object
      description: Member
      required:
        - login
        - id
        - avatar_url
        - url
      properties:
        login:
          type: string
        id:
          type: integer
          format: int64
        avatar_url:
          type: string
          format: uri
        url:
          type: string
          format: uri
      x-examples:
        example:
          login: hirokikondo86
          id: 1
          avatar_url: https://github.com/hirokikondo86/avatar
          url: https://github.com/hirokikondo86
